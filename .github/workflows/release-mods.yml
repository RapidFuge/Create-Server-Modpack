name: Release Mods

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name for the release"
        required: true
        default: "1.0.0" # Set default tag if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          python -m pip install toml requests

      - name: Download mods
        env:
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
        run: |
          mkdir -p mods/client mods/server
          python download_mods.py

      - name: Create ZIP files
        run: |
          zip -r client-mods.zip mods/client
          zip -r server-mods.zip mods/server

      - name: Download Additional Resource Pack
        run: |
          wget -O resource-pack.zip "https://i.rapidfuge.xyz/36b9dd.zip"

      - name: Set Tag Name
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - name: Encode Mod Summary
        id: encode_summary
        run: |
          base64 mod_summary.txt > mod_summary_base64.txt

      - name: Decode and Set Mod Summary Environment Variable
        id: decode_summary
        run: |
          MOD_SUMMARY=$(cat mod_summary_base64.txt | base64 --decode)
          echo "MOD_SUMMARY<<EOF" >> $GITHUB_ENV
          echo "$MOD_SUMMARY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: ${{ env.MOD_SUMMARY }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Client)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client-mods.zip
          asset_name: client-mods.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Server)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server-mods.zip
          asset_name: server-mods.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Resource Pack)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resource-pack.zip
          asset_name: resource-pack.zip
          asset_content_type: application/zip
