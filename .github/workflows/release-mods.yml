name: Release Mods

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          python -m pip install toml requests

      - name: Read Pack Version
        id: read_version
        run: |
          python -c "import toml; print(toml.load('pack.toml')['version'])" > version.txt

      - name: Set Tag Name
        id: set_tag
        run: |
          VERSION=$(cat version.txt)
          echo "TAG_NAME=v$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Mod Summary File
        id: create_summary
        run: |
          echo "$(cat mod_summary.txt)" > mod_summary_env.txt

      - name: Encode Mod Summary
        id: encode_summary
        run: |
          base64 mod_summary_env.txt > mod_summary_base64.txt

      - name: Decode and Set Mod Summary Environment Variable
        id: decode_summary
        run: |
          MOD_SUMMARY=$(cat mod_summary_base64.txt | base64 --decode)
          echo "MOD_SUMMARY<<EOF" >> $GITHUB_ENV
          echo "$MOD_SUMMARY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Tag
        id: create_tag
        uses: gittools/actions/git-tag@v1
        with:
          tag: ${{ env.TAG_NAME }}
          message: "Release ${{ env.VERSION }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.VERSION }}
          body: ${{ env.MOD_SUMMARY }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Client)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client-mods.zip
          asset_name: client-mods.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Server)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server-mods.zip
          asset_name: server-mods.zip
          asset_content_type: application/zip
